name: Generate JSON/YAML from XLSX and Update Sitemap

# 💡 TIP: Upload ANY .xlsx file (e.g., client-data-v2.xlsx) to templates/ — it will auto-rename to client-data.xlsx
#        → No need to delete old file — it will be overwritten automatically.
#        → Avoid uploading same filename via web UI — may not trigger workflow.

on:
  push:
    branches:
      - main
    paths:
      - 'templates/*.xlsx'
  workflow_dispatch:  # 👈 Allows manual run from Actions tab (fallback trigger)

jobs:
  generate-and-update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Dependencies
        run: |
          pip install pandas openpyxl PyYAML

      - name: Get Changed XLSX Files via Git Diff
        id: get_files
        run: |
          echo "📄 Comparing against base commit: ${{ github.event.before }}"
          BEFORE_COMMIT=${{ github.event.before }}
          if [[ "$BEFORE_COMMIT" == "0000000000000000000000000000000000000000" ]]; then
            BEFORE_COMMIT=4b825dc642cb6eb9a060e54bf8d69288fbee4904
          fi

          CHANGED_FILES=$(git diff --name-only --diff-filter=AM "$BEFORE_COMMIT" HEAD | grep '^templates/.*\.xlsx$' || true)

          if [ -z "$CHANGED_FILES" ]; then
            echo "⚠️ No .xlsx files detected in templates/ in this push."
          else
            echo "✅ Detected changed XLSX files:"
            echo "$CHANGED_FILES"
          fi

          echo "changed_xlsx=$CHANGED_FILES" >> $GITHUB_ENV

      - name: Rename Any XLSX to client-data.xlsx (Auto-replace)
        if: env.changed_xlsx != ''
        run: |
          # Process each changed file
          while IFS= read -r xlsx_file; do
            if [ -n "$xlsx_file" ] && [ -f "$xlsx_file" ]; then
              TARGET="templates/client-data.xlsx"
              if [[ "$xlsx_file" != "$TARGET" ]]; then
                echo "🔄 Renaming '$xlsx_file' → '$TARGET'"
                mkdir -p templates  # Ensure dir exists
                mv "$xlsx_file" "$TARGET"  # Overwrites existing file
                echo "changed_xlsx=$TARGET" >> $GITHUB_ENV  # Update for next steps
              else
                echo "✅ File already named correctly: $TARGET"
              fi
            fi
          done <<< "${{ env.changed_xlsx }}"

      - name: Process Each XLSX File
        if: env.changed_xlsx != ''
        run: |
          echo "⚙️ Processing detected XLSX files..."
          while IFS= read -r xlsx_file; do
            if [ -n "$xlsx_file" ] && [ -f "$xlsx_file" ]; then
              echo "📄 Processing: $xlsx_file"
              python ai-generators/generate_files_from_xlsx.py --input "$xlsx_file"
            else
              echo "❌ ERROR: File not found: '$xlsx_file'"
            fi
          done <<< "${{ env.changed_xlsx }}"

      - name: FORCE CREATE DUMMY FILES IN ALL DIRECTORIES (ENSURE GIT TRACKS THEM)
        run: |
          mkdir -p schema-files/organization
          mkdir -p schema-files/services
          mkdir -p schema-files/products
          mkdir -p schema-files/faqs
          mkdir -p schema-files/help-articles
          mkdir -p schema-files/reviews
          mkdir -p schema-files/locations
          mkdir -p schema-files/team
          mkdir -p schema-files/awards
          mkdir -p schema-files/press
          mkdir -p schema-files/case-studies
          touch schema-files/organization/.gitkeep
          touch schema-files/services/.gitkeep
          touch schema-files/products/.gitkeep
          touch schema-files/faqs/.gitkeep
         
